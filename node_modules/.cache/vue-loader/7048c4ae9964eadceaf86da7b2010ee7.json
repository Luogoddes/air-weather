{"remainingRequest":"E:\\code\\vue\\screen-vue-datav\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\vue\\screen-vue-datav\\src\\components\\echart\\bottom\\bottomLeftChart\\temp7day.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\code\\vue\\screen-vue-datav\\src\\components\\echart\\bottom\\bottomLeftChart\\temp7day.vue","mtime":1718201202237},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1716778783793},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\babel-loader\\lib\\index.js","mtime":1716778784730},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1716778783793},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\vue-loader\\lib\\index.js","mtime":1716778785207}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZSh7CiAgICAgIHJlZ2lvbjogc3RhdGUgPT4gc3RhdGUucmVnaW9uLAogICAgfSksCiAgfSwKICB3YXRjaDogewogICAgJ3JlZ2lvbi5pZCc6IGZ1bmN0aW9uIChuZXdJZCkgewogICAgICBpZiAobmV3SWQpIHsKICAgICAgICAvL2FsZXJ0KCJ0ZW1wN2RheSDnm5HlkKzliLDlnLDljLrlgLzmlLnlj5jvvIzlvIDlp4vova7or6LmlbDmja46IiArIG5ld0lkKQogICAgICAgIHRoaXMuZ2V0V2VhdGhlckluZm8obmV3SWQpOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgaWYgKHRoaXMucmVnaW9uLmlkKSB7CiAgICAgIC8vYWxlcnQoInRlbXA3ZGF0eSDmnIkiKQogICAgICB0aGlzLmdldFdlYXRoZXJJbmZvKHRoaXMucmVnaW9uLmlkKTsKICAgIH0gCiAgICAvLyBlbHNlIHsKICAgIC8vICAgYWxlcnQoInRlbXA3ZGF0eSDmsqHmnIkiKQogICAgLy8gfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG9wdGlvbnM6IHt9LAogICAgICAvLyDlrprkuYnpopzoibIKICAgICAgY29sb3JMaXN0OiB7CiAgICAgICAgbGluZWFyWXRvRzogewogICAgICAgICAgdHlwZTogJ2xpbmVhcicsCiAgICAgICAgICB4OiAwLAogICAgICAgICAgeTogMCwKICAgICAgICAgIHgyOiAxLAogICAgICAgICAgeTI6IDEsCiAgICAgICAgICBjb2xvclN0b3BzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgY29sb3I6ICcjZjViNDRkJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgIGNvbG9yOiAnIzI4ZjhkZScKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgbGluZWFyR3RvQjogewogICAgICAgICAgdHlwZTogJ2xpbmVhcicsCiAgICAgICAgICB4OiAwLAogICAgICAgICAgeTogMCwKICAgICAgICAgIHgyOiAxLAogICAgICAgICAgeTI6IDAsCiAgICAgICAgICBjb2xvclN0b3BzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgY29sb3I6ICcjNDNkZmEyJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgIGNvbG9yOiAnIzI4ZjhkZScKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgbGluZWFyQnRvRzogewogICAgICAgICAgdHlwZTogJ2xpbmVhcicsCiAgICAgICAgICB4OiAwLAogICAgICAgICAgeTogMCwKICAgICAgICAgIHgyOiAxLAogICAgICAgICAgeTI6IDAsCiAgICAgICAgICBjb2xvclN0b3BzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgY29sb3I6ICcjMWM5OGU4JwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgIGNvbG9yOiAnIzI4ZjhkZScKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgIH0sCiAgICAgIG5vd0RhdGE6IHsKICAgICAgICB0aW1lOiBbXSwgICAgIC8v5pe26Ze0CiAgICAgICAgdGV4dERheTogW10sICAvL+eZveWkqeWkqeawlOaPj+i/sAogICAgICAgIHdpbmREaXJEYXlfd2luZFNjYWxlRGF5OiBbXSwgIC8v6aOO5ZCR6aOO6YCfCiAgICAgICAgdGVtcE1heDogW10sICAvL+acgOmrmOawlOa4qQogICAgICAgIHRlbXBNaW46IFtdLCAgLy/mnIDkvY7msJTmuKkKICAgICAgICBwcmVjaXA6IFtdLCAgIC8v6ZmN6Zuo6YePCiAgICAgICAgdXZJbmRleDogW10sICAvL+e0q+Wklue6v+W8uuW6pgogICAgICB9CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgZHJhd0NoYXJ0KCkgewogICAgICAvLyDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LICDov5nkuKrlkozkuIrpnaLnmoRtYWlu5a+55bqUCiAgICAgIGNvbnN0IG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRlbXA3ZGF5IikpOwogICAgICAvLyDmjIflrprlm77ooajnmoTphY3nva7pobnlkozmlbDmja4KICAgICAgY29uc3Qgb3B0aW9uID0gewogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAvL2JhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JywKICAgICAgICAgIG9wYWNpdHk6IDAuMywKICAgICAgICAgIGJvcmRlcldpZHRoOiAnMCcsCiAgICAgICAgICB0b3A6ICcxNjAnLAogICAgICAgICAgYm90dG9tOiAnMzUnCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgZGF0YTogWyfpmY3pm6jph48v5q+r57GzJywgJ+e0q+Wklue6vyddLAogICAgICAgICAgdG9wOiAnMTAwcHgnLCAvLyDosIPmlbTlm77kvovot53nprvpobbpg6jnmoTkvY3nva4KICAgICAgICAgIHJpZ2h0OiAnMjBweCcsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6ICcjZmZmJywKICAgICAgICAgICAgZm9udFNpemU6IDE1CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB4QXhpczogWwogICAgICAgICAgLy8g5pel5pyfCiAgICAgICAgICB7CiAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgICAgcG9zaXRpb246ICd0b3AnLAogICAgICAgICAgICBvZmZzZXQ6IDEzMCwKICAgICAgICAgICAgemxldmVsOiAxMDAsCiAgICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogIiNCNEI0QjQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBheGlzVGljazogewogICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICAgIGludGVydmFsOiAwLAogICAgICAgICAgICAgIGZvcm1hdHRlcjogWwogICAgICAgICAgICAgICAgJ3thfHt2YWx1ZX19JwogICAgICAgICAgICAgIF0uam9pbignXG4nKSwKICAgICAgICAgICAgICByaWNoOiB7CiAgICAgICAgICAgICAgICBhOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnLAogICAgICAgICAgICAgICAgICBmb250U2l6ZTogMjAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRhdGE6IHRoaXMubm93RGF0YS50aW1lLAogICAgICAgICAgfSwKICAgICAgICAgIC8vIOWkqeawlOWbvuaghwogICAgICAgICAgewogICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsCiAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wJywKICAgICAgICAgICAgb2Zmc2V0OiA5NSwKICAgICAgICAgICAgemxldmVsOiAxMDAsCiAgICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgICBuYW1lVGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnLAogICAgICAgICAgICAgIGZvbnRTaXplOiAyOQogICAgICAgICAgICB9LAogICAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgICBpbnRlcnZhbDogMCwKICAgICAgICAgICAgICBmb3JtYXR0ZXI6IFsKICAgICAgICAgICAgICAgICd7YXx7dmFsdWV9fScKICAgICAgICAgICAgICBdLmpvaW4oJ1xuJyksCiAgICAgICAgICAgICAgcmljaDogewogICAgICAgICAgICAgICAgYTogewogICAgICAgICAgICAgICAgICBjb2xvcjogJ3doaXRlJywKICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDIwCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyBkYXRhOiB0aGlzLndlYXRoZXJkYXRhLndlYXRoZXIKICAgICAgICAgICAgZGF0YTogdGhpcy5ub3dEYXRhLnRleHREYXksCiAgICAgICAgICB9LAogICAgICAgICAgLy8g5aSp5rCU6aOO5ZCRLemjjuWKmwogICAgICAgICAgewogICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsCiAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wJywKICAgICAgICAgICAgb2Zmc2V0OiA2NSwKICAgICAgICAgICAgemxldmVsOiAxMDAsCiAgICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgICBuYW1lVGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnLAogICAgICAgICAgICAgIGZvbnRTaXplOiAyOQogICAgICAgICAgICB9LAogICAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgICBpbnRlcnZhbDogMCwKICAgICAgICAgICAgICBmb3JtYXR0ZXI6IFsKICAgICAgICAgICAgICAgICd7YXx7dmFsdWV9fScKICAgICAgICAgICAgICBdLmpvaW4oJ1xuJyksCiAgICAgICAgICAgICAgcmljaDogewogICAgICAgICAgICAgICAgYTogewogICAgICAgICAgICAgICAgICBjb2xvcjogJ3doaXRlJywKICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDE4CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyBkYXRhOiB0aGlzLndlYXRoZXJkYXRhLndlYXRoZXIKICAgICAgICAgICAgZGF0YTogdGhpcy5ub3dEYXRhLndpbmREaXJEYXlfd2luZFNjYWxlRGF5LAogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICBzaG93OiB0cnVlLCAvL+aYr+WQpuaYvuekuuiDjOaZrwogICAgICAgICAgb2Zmc2V0OiAzMCwgLy8g5ZCR5Y+z56e75YqoMzDlg4/ntKAKICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnLAogICAgICAgICAgICAgIG9wYWNpdHk6IDAuMQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIGZvcm1hdHRlcjogJ3t2YWx1ZX0gwrBDJywKICAgICAgICAgICAgY29sb3I6ICd3aGl0ZScKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogWwogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAn5pyA6auY5rCU5ripJywKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiB0aGlzLm5vd0RhdGEudGVtcE1heCwvLywKICAgICAgICAgICAgc3ltYm9sOiAnZW1wdHlDaXJjbGUnLAogICAgICAgICAgICBzeW1ib2xTaXplOiAxMCwKICAgICAgICAgICAgc2hvd1N5bWJvbDogdHJ1ZSwKICAgICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyM1NUUyQTknCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsCiAgICAgICAgICAgICAgY29sb3I6ICd3aGl0ZScsCiAgICAgICAgICAgICAgZm9udFNpemU6IDE5LAogICAgICAgICAgICAgIGZvcm1hdHRlcjogJ3tjfSDCsEMnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgICAgY29sb3I6IHRoaXMuY29sb3JMaXN0LmxpbmVhckJ0b0csCiAgICAgICAgICAgICAgICB3aWR0aDogNQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAvLyBjb2xvcjogJ3doaXRlJwogICAgICAgICAgICB9LAogICAgICAgICAgICBhcmVhU3R5bGU6IHsKICAgICAgICAgICAgICBvcGFjaXR5OiAxLAogICAgICAgICAgICAgIGNvbG9yOiAndHJhbnNwYXJlbnQnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICfmnIDkvY7msJTmuKknLAogICAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICAgIGRhdGE6IHRoaXMubm93RGF0YS50ZW1wTWluLC8vCiAgICAgICAgICAgIHN5bWJvbDogJ2VtcHR5Q2lyY2xlJywKICAgICAgICAgICAgc3ltYm9sU2l6ZTogMTAsCiAgICAgICAgICAgIHNob3dTeW1ib2w6IHRydWUsCiAgICAgICAgICAgIHNtb290aDogdHJ1ZSwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJyM1NUUyQTknLAogICAgICAgICAgICAgICAgb3BhY2l0eTogMC42CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgcG9zaXRpb246ICdib3R0b20nLAogICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnLCAgLy/nur/kuIrnmoTpopzoibIKICAgICAgICAgICAgICBmb250U2l6ZTogMTksCiAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne2N9IMKwQycKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogdGhpcy5jb2xvckxpc3QubGluZWFyWXRvRywKICAgICAgICAgICAgICAgIHdpZHRoOiA1CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIC8vIGNvbG9yOiAnd2hpdGUnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGFyZWFTdHlsZTogewogICAgICAgICAgICAgIG9wYWNpdHk6IDEsCiAgICAgICAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ+mZjembqOmHjy/mr6vnsbMnLAogICAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgICAgZGF0YTogdGhpcy5ub3dEYXRhLnByZWNpcCwvLwogICAgICAgICAgICBzbW9vdGg6IHRydWUsCiAgICAgICAgICAgIGJhcldpZHRoOiAnMzAlJywgLy8g6LCD5pW05p+x5a2Q55qE5a695bqm5Li65oC75a695bqm55qENDAlCiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzMyQzVFOScsCiAgICAgICAgICAgICAgLy/lpLTpg6jkuLrlnIbop5IKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIGJhckJvcmRlclJhZGl1czogWzUsIDUsIDAsIDBdLAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgIHBvc2l0aW9uOiAnaW5zaWRlJywgLy8g6K6+572u5pWw5o2u5qCH562+5pi+56S65L2N572u5Li65p+x5a2Q5YaF6YOoCiAgICAgICAgICAgICAgY29sb3I6ICd3aGl0ZScsCiAgICAgICAgICAgICAgZm9udFNpemU6IDE5LAogICAgICAgICAgICAgIGZvcm1hdHRlcjogJ3tjfScKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbWFya0xpbmU6IHsKICAgICAgICAgICAgICBkYXRhOiBbeyB0eXBlOiAnYXZlcmFnZScsIG5hbWU6ICdBdmcnIH1dLAogICAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicsIC8vIOiuvue9ruWtl+S9k+minOiJsgogICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTkgLy8g6K6+572u5a2X5L2T5aSn5bCPCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ+e0q+Wklue6vycsCiAgICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgICBkYXRhOiB0aGlzLm5vd0RhdGEudXZJbmRleCwvLwogICAgICAgICAgICBzbW9vdGg6IHRydWUsCiAgICAgICAgICAgIGJhcldpZHRoOiAnMzAlJywgLy8g6LCD5pW05p+x5a2Q55qE5a695bqm5Li65oC75a695bqm55qENDAlCiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzMyQzVFOScsCiAgICAgICAgICAgICAgLy/lpLTpg6jkuLrlnIbop5IKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIGJhckJvcmRlclJhZGl1czogWzUsIDUsIDAsIDBdLAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgIHBvc2l0aW9uOiAnaW5zaWRlJywgLy8g6K6+572u5pWw5o2u5qCH562+5pi+56S65L2N572u5Li65p+x5a2Q5YaF6YOoCiAgICAgICAgICAgICAgY29sb3I6ICd3aGl0ZScsCiAgICAgICAgICAgICAgZm9udFNpemU6IDE5LAogICAgICAgICAgICAgIGZvcm1hdHRlcjogJ3tjfScKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbWFya0xpbmU6IHsKICAgICAgICAgICAgICBkYXRhOiBbeyB0eXBlOiAnYXZlcmFnZScsIG5hbWU6ICdBdmcnIH1dLAogICAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicsIC8vIOiuvue9ruWtl+S9k+minOiJsgogICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTkgLy8g6K6+572u5a2X5L2T5aSn5bCPCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAoKICAgICAgICAgIH0sCgogICAgICAgIF0KICAgICAgfTsKICAgICAgLy8g5L2/55So5Yia5oyH5a6a55qE6YWN572u6aG55ZKM5pWw5o2u5pi+56S65Zu+6KGo44CCCiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9LAogICAgLy8gZHJhd1RpbWluZ0ZuKCkgewogICAgLy8gICB0aGlzLmdldFdlYXRoZXJJbmZvKCk7CiAgICAvLyAgIHRoaXMuZHJhd1RpbWluZyA9IHNldEludGVydmFsKCgpID0+IHsKICAgIC8vICAgICB0aGlzLmdldFdlYXRoZXJJbmZvKCk7CiAgICAvLyAgIH0sIDYwMDAwMCk7ICAgLy82MDAwMDDvvIgxMOWIhumSn+eahOavq+enkuaVsO+8iQogICAgLy8gfSwKICAgIGdldFdlYXRoZXJJbmZvKGxvY2F0aW9uKSB7CiAgICAgIC8vY29uc3QgbG9jYXRpb24gPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldFJlZ2lvbklkOwogICAgICAvL2FsZXJ0KCJ0ZW1wN2RheS3vvJoiICsgbG9jYXRpb24pCiAgICAgIGF4aW9zLmdldChgaHR0cHM6Ly9kZXZhcGkucXdlYXRoZXIuY29tL3Y3L3dlYXRoZXIvN2Q/bG9jYXRpb249JHtsb2NhdGlvbn0ma2V5PSR7dGhpcy4kYXBpS2V5fWApCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgY29uc3QgZGF0YSA9IHJlc3BvbnNlLmRhdGEuZGFpbHkKICAgICAgICAgIGNvbnNvbGUubG9nKCI9PT09PXRlbXA3ZGF5PT09PT0iKTsKICAgICAgICAgIC8vY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgICAvLyDpgY3ljobmlbDmja7lubblsIblgLzlrZjlhaXlr7nlupTnmoTmlbDnu4TkuK0KICAgICAgICAgIGRhdGEuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgICAgLy8g5aSE55CG5pel5pyf5qC85byPCiAgICAgICAgICAgIGNvbnN0IGRhdGUgPSBpdGVtLmZ4RGF0ZS5zcGxpdCgnLScpLnNsaWNlKDEpLm1hcChzID0+IFN0cmluZyhOdW1iZXIocykpKS5qb2luKCcuJyk7Ly9pdGVtLmZ4RGF0ZS5zcGxpdCgnLScpLnNsaWNlKDEpLmpvaW4oJy4nKTsgLy8g5bCGICIyMDI0LTA2LTEwIiDovazmjaLkuLogIjA2LjEwIgoKICAgICAgICAgICAgLy8g5a2Y5YKo5pWw5o2u5Yiw5a+55bqU5pWw57uE5LitCiAgICAgICAgICAgIHRoaXMubm93RGF0YS50aW1lLnB1c2goZGF0ZSArICLml6UiKTsKICAgICAgICAgICAgdGhpcy5ub3dEYXRhLnRleHREYXkucHVzaChpdGVtLnRleHREYXkpOwogICAgICAgICAgICB0aGlzLm5vd0RhdGEud2luZERpckRheV93aW5kU2NhbGVEYXkucHVzaChgJHtpdGVtLndpbmREaXJEYXl9ICR7aXRlbS53aW5kU2NhbGVEYXl957qnYCk7CiAgICAgICAgICAgIHRoaXMubm93RGF0YS50ZW1wTWF4LnB1c2goaXRlbS50ZW1wTWF4KTsKICAgICAgICAgICAgdGhpcy5ub3dEYXRhLnRlbXBNaW4ucHVzaChpdGVtLnRlbXBNaW4pOwogICAgICAgICAgICB0aGlzLm5vd0RhdGEucHJlY2lwLnB1c2goaXRlbS5wcmVjaXApOwogICAgICAgICAgICB0aGlzLm5vd0RhdGEudXZJbmRleC5wdXNoKGl0ZW0udXZJbmRleCk7CiAgICAgICAgICB9KTsKICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMubm93RGF0YSkKICAgICAgICAgIHRoaXMuZHJhd0NoYXJ0KCk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgdGVtcDdkYXkgaW5mbzonLCBlcnJvcik7CiAgICAgICAgICB0aGlzLm5vd0RhdGEudGltZSA9IFsiMjXml6UiLCAiMjbml6UiLCAiMjfml6UiLCAiMjjml6UiLCAiMjnml6UiLCAiMzDml6UiLCAiMzHml6UiXTsgICAgIC8v5pe26Ze0CiAgICAgICAgICB0aGlzLm5vd0RhdGEudGV4dERheSA9IFsi5bCP6ZuoIiwgIuWwj+mbqCIsICLpmLQiLCAi5bCP6ZuoIiwgIuWkmuS6kSIsICLlsI/pm6giLCAi5bCP6ZuoIl07ICAvL+eZveWkqeWkqeawlOaPj+i/sAogICAgICAgICAgdGhpcy5ub3dEYXRhLndpbmREaXJEYXlfd2luZFNjYWxlRGF5ID0gWyLkuJzljJfpo44gMee6pyIsICLkuJzljJfpo44gMee6pyIsICLkuJzljJfpo44gMee6pyIsICLkuJzljJfpo44gMee6pyIsICLkuJzljJfpo44gMee6pyIsICLkuJzljJfpo44gMee6pyIsICLkuJzljJfpo44gMee6pyJdOyAvL+mjjuWQkemjjumAnwogICAgICAgICAgdGhpcy5ub3dEYXRhLnRlbXBNYXggPSBbIjE2LjMiLCAiMTYuMiIsICIxNy42IiwgIjE0LjIiLCAiMTcuNiIsICIyNS43IiwgIjE0LjMiXTsgIC8v5pyA6auY5rCU5ripCiAgICAgICAgICB0aGlzLm5vd0RhdGEudGVtcE1pbiA9IFsiMTMuNCIsICIxMi44IiwgIjEzLjUiLCAiMTIuNSIsICIxMi40IiwgIjEzLjIiLCAiMTMiXTsgIC8v5pyA5L2O5rCU5ripCiAgICAgICAgICB0aGlzLm5vd0RhdGEucHJlY2lwID0gWyIzLjMiLCAiNi4yIiwgIjcuNiIsICI0LjIiLCAiNy42IiwgIjUuNyIsICI0LjMiXTsgICAvL+mZjembqOmHjwogICAgICAgICAgdGhpcy5ub3dEYXRhLnV2SW5kZXggPSBbIjMiLCAiNiIsICI2IiwgIjIiLCAiNiIsICI3IiwgIjQiXTsgLy/ntKvlpJbnur/lvLrluqYKCiAgICAgICAgfSk7CiAgICB9LAoKCiAgfQoKCn0K"},{"version":3,"sources":["temp7day.vue"],"names":[],"mappingsfile":"temp7day.vue","sourceRoot":"src/components/echart/bottom/bottomLeftChart","sourcesContent":["<template>\n\n  <div id=\"temp7day\" style=\"width: 100%; height: 480px\"></div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapState } from 'vuex';\nexport default {\n  computed: {\n    ...mapState({\n      region: state => state.region,\n    }),\n  },\n  watch: {\n    'region.id': function (newId) {\n      if (newId) {\n        //alert(\"temp7day 监听到地区值改变，开始轮询数据:\" + newId)\n        this.getWeatherInfo(newId);\n      }\n    }\n  },\n  mounted() {\n    if (this.region.id) {\n      //alert(\"temp7daty 有\")\n      this.getWeatherInfo(this.region.id);\n    } \n    // else {\n    //   alert(\"temp7daty 没有\")\n    // }\n  },\n  data() {\n    return {\n      options: {},\n      // 定义颜色\n      colorList: {\n        linearYtoG: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 1,\n          y2: 1,\n          colorStops: [\n            {\n              offset: 0,\n              color: '#f5b44d'\n            },\n            {\n              offset: 1,\n              color: '#28f8de'\n            }\n          ]\n        },\n        linearGtoB: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 1,\n          y2: 0,\n          colorStops: [\n            {\n              offset: 0,\n              color: '#43dfa2'\n            },\n            {\n              offset: 1,\n              color: '#28f8de'\n            }\n          ]\n        },\n        linearBtoG: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 1,\n          y2: 0,\n          colorStops: [\n            {\n              offset: 0,\n              color: '#1c98e8'\n            },\n            {\n              offset: 1,\n              color: '#28f8de'\n            }\n          ]\n        },\n      },\n      nowData: {\n        time: [],     //时间\n        textDay: [],  //白天天气描述\n        windDirDay_windScaleDay: [],  //风向风速\n        tempMax: [],  //最高气温\n        tempMin: [],  //最低气温\n        precip: [],   //降雨量\n        uvIndex: [],  //紫外线强度\n      }\n    }\n  },\n\n  methods: {\n    drawChart() {\n      // 基于准备好的dom，初始化echarts实例  这个和上面的main对应\n      const myChart = this.$echarts.init(document.getElementById(\"temp7day\"));\n      // 指定图表的配置项和数据\n      const option = {\n        grid: {\n          show: true,\n          //backgroundColor: 'transparent',\n          opacity: 0.3,\n          borderWidth: '0',\n          top: '160',\n          bottom: '35'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['降雨量/毫米', '紫外线'],\n          top: '100px', // 调整图例距离顶部的位置\n          right: '20px',\n          textStyle: {\n            color: '#fff',\n            fontSize: 15\n          }\n        },\n        xAxis: [\n          // 日期\n          {\n            type: 'category',\n            boundaryGap: false,\n            position: 'top',\n            offset: 130,\n            zlevel: 100,\n            axisLine: {\n              lineStyle: {\n                color: \"#B4B4B4\"\n              }\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              interval: 0,\n              formatter: [\n                '{a|{value}}'\n              ].join('\\n'),\n              rich: {\n                a: {\n                  color: 'white',\n                  fontSize: 20\n                }\n              }\n            },\n            data: this.nowData.time,\n          },\n          // 天气图标\n          {\n            type: 'category',\n            boundaryGap: false,\n            position: 'top',\n            offset: 95,\n            zlevel: 100,\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            nameTextStyle: {\n              fontWeight: 'bold',\n              fontSize: 29\n            },\n            axisLabel: {\n              interval: 0,\n              formatter: [\n                '{a|{value}}'\n              ].join('\\n'),\n              rich: {\n                a: {\n                  color: 'white',\n                  fontSize: 20\n                }\n              }\n            },\n            // data: this.weatherdata.weather\n            data: this.nowData.textDay,\n          },\n          // 天气风向-风力\n          {\n            type: 'category',\n            boundaryGap: false,\n            position: 'top',\n            offset: 65,\n            zlevel: 100,\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            nameTextStyle: {\n              fontWeight: 'bold',\n              fontSize: 29\n            },\n            axisLabel: {\n              interval: 0,\n              formatter: [\n                '{a|{value}}'\n              ].join('\\n'),\n              rich: {\n                a: {\n                  color: 'white',\n                  fontSize: 18\n                }\n              }\n            },\n            // data: this.weatherdata.weather\n            data: this.nowData.windDirDay_windScaleDay,\n          }\n        ],\n        yAxis: {\n          type: 'value',\n          show: true, //是否显示背景\n          offset: 30, // 向右移动30像素\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#fff',\n              opacity: 0.1\n            }\n          },\n          axisLabel: {\n            formatter: '{value} °C',\n            color: 'white'\n          }\n        },\n        series: [\n          {\n            name: '最高气温',\n            type: 'line',\n            data: this.nowData.tempMax,//,\n            symbol: 'emptyCircle',\n            symbolSize: 10,\n            showSymbol: true,\n            smooth: true,\n            itemStyle: {\n              color: '#55E2A9'\n            },\n            label: {\n              show: true,\n              position: 'top',\n              color: 'white',\n              fontSize: 19,\n              formatter: '{c} °C'\n            },\n            lineStyle: {\n              normal: {\n                color: this.colorList.linearBtoG,\n                width: 5\n              }\n              // color: 'white'\n            },\n            areaStyle: {\n              opacity: 1,\n              color: 'transparent'\n            }\n          },\n          {\n            name: '最低气温',\n            type: 'line',\n            data: this.nowData.tempMin,//\n            symbol: 'emptyCircle',\n            symbolSize: 10,\n            showSymbol: true,\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#55E2A9',\n                opacity: 0.6\n              }\n            },\n            label: {\n              show: true,\n              position: 'bottom',\n              color: 'white',  //线上的颜色\n              fontSize: 19,\n              formatter: '{c} °C'\n            },\n            lineStyle: {\n              normal: {\n                color: this.colorList.linearYtoG,\n                width: 5\n              }\n              // color: 'white'\n            },\n            areaStyle: {\n              opacity: 1,\n              color: 'transparent'\n            }\n          },\n          {\n            name: '降雨量/毫米',\n            type: 'bar',\n            data: this.nowData.precip,//\n            smooth: true,\n            barWidth: '30%', // 调整柱子的宽度为总宽度的40%\n            itemStyle: {\n              color: '#32C5E9',\n              //头部为圆角\n              normal: {\n                barBorderRadius: [5, 5, 0, 0],\n              }\n            },\n            label: {\n              show: true,\n              position: 'inside', // 设置数据标签显示位置为柱子内部\n              color: 'white',\n              fontSize: 19,\n              formatter: '{c}'\n            },\n            markLine: {\n              data: [{ type: 'average', name: 'Avg' }],\n              label: {\n                show: true,\n                textStyle: {\n                  color: '#fff', // 设置字体颜色\n                  fontSize: 19 // 设置字体大小\n                }\n              }\n            },\n          },\n          {\n            name: '紫外线',\n            type: 'bar',\n            data: this.nowData.uvIndex,//\n            smooth: true,\n            barWidth: '30%', // 调整柱子的宽度为总宽度的40%\n            itemStyle: {\n              color: '#32C5E9',\n              //头部为圆角\n              normal: {\n                barBorderRadius: [5, 5, 0, 0],\n              }\n            },\n            label: {\n              show: true,\n              position: 'inside', // 设置数据标签显示位置为柱子内部\n              color: 'white',\n              fontSize: 19,\n              formatter: '{c}'\n            },\n            markLine: {\n              data: [{ type: 'average', name: 'Avg' }],\n              label: {\n                show: true,\n                textStyle: {\n                  color: '#fff', // 设置字体颜色\n                  fontSize: 19 // 设置字体大小\n                }\n              }\n            },\n\n          },\n\n        ]\n      };\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    },\n    // drawTimingFn() {\n    //   this.getWeatherInfo();\n    //   this.drawTiming = setInterval(() => {\n    //     this.getWeatherInfo();\n    //   }, 600000);   //600000（10分钟的毫秒数）\n    // },\n    getWeatherInfo(location) {\n      //const location = this.$store.getters.getRegionId;\n      //alert(\"temp7day-：\" + location)\n      axios.get(`https://devapi.qweather.com/v7/weather/7d?location=${location}&key=${this.$apiKey}`)\n        .then(response => {\n          const data = response.data.daily\n          console.log(\"=====temp7day=====\");\n          //console.log(data);\n          // 遍历数据并将值存入对应的数组中\n          data.forEach(item => {\n            // 处理日期格式\n            const date = item.fxDate.split('-').slice(1).map(s => String(Number(s))).join('.');//item.fxDate.split('-').slice(1).join('.'); // 将 \"2024-06-10\" 转换为 \"06.10\"\n\n            // 存储数据到对应数组中\n            this.nowData.time.push(date + \"日\");\n            this.nowData.textDay.push(item.textDay);\n            this.nowData.windDirDay_windScaleDay.push(`${item.windDirDay} ${item.windScaleDay}级`);\n            this.nowData.tempMax.push(item.tempMax);\n            this.nowData.tempMin.push(item.tempMin);\n            this.nowData.precip.push(item.precip);\n            this.nowData.uvIndex.push(item.uvIndex);\n          });\n          console.log(this.nowData)\n          this.drawChart();\n        })\n        .catch(error => {\n          console.error('Error fetching temp7day info:', error);\n          this.nowData.time = [\"25日\", \"26日\", \"27日\", \"28日\", \"29日\", \"30日\", \"31日\"];     //时间\n          this.nowData.textDay = [\"小雨\", \"小雨\", \"阴\", \"小雨\", \"多云\", \"小雨\", \"小雨\"];  //白天天气描述\n          this.nowData.windDirDay_windScaleDay = [\"东北风 1级\", \"东北风 1级\", \"东北风 1级\", \"东北风 1级\", \"东北风 1级\", \"东北风 1级\", \"东北风 1级\"]; //风向风速\n          this.nowData.tempMax = [\"16.3\", \"16.2\", \"17.6\", \"14.2\", \"17.6\", \"25.7\", \"14.3\"];  //最高气温\n          this.nowData.tempMin = [\"13.4\", \"12.8\", \"13.5\", \"12.5\", \"12.4\", \"13.2\", \"13\"];  //最低气温\n          this.nowData.precip = [\"3.3\", \"6.2\", \"7.6\", \"4.2\", \"7.6\", \"5.7\", \"4.3\"];   //降雨量\n          this.nowData.uvIndex = [\"3\", \"6\", \"6\", \"2\", \"6\", \"7\", \"4\"]; //紫外线强度\n\n        });\n    },\n\n\n  }\n\n\n}\n</script>"]}]}
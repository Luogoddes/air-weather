{"remainingRequest":"E:\\code\\vue\\screen-vue-datav\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\vue\\screen-vue-datav\\src\\views\\index.vue?vue&type=style&index=0&id=a83bd3b0&lang=scss&scoped=true","dependencies":[{"path":"E:\\code\\vue\\screen-vue-datav\\src\\views\\index.vue","mtime":1718204199804},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\css-loader\\dist\\cjs.js","mtime":1716778784199},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1716778785760},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\postcss-loader\\src\\index.js","mtime":1716778784725},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1716778783793},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1716778783793},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\vue-loader\\lib\\index.js","mtime":1716778785207}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lbC1pbnB1dF9faW5uZXIgewogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7CiAgY29sb3I6IGFsaWNlYmx1ZTsKfQoKQGltcG9ydCAnLi4vYXNzZXRzL3Njc3MvaW5kZXguc2Nzcyc7CgoK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAkPA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"index\" ref=\"appRef\">\n    <div class=\"bg\">\n      <dv-loading v-if=\"loading\">Loading...</dv-loading>\n      <div v-else class=\"host-body\">\n        <div class=\"d-flex jc-center\">\n          <dv-decoration-10 class=\"dv-dec-10\" />\n          <div class=\"d-flex jc-center\">\n            <dv-decoration-8 class=\"dv-dec-8\" :color=\"decorationColor\" />\n            <div class=\"title\">\n              <span class=\"title-text\">全方位天气状况监控</span>\n              <dv-decoration-6 class=\"dv-dec-6\" :reverse=\"true\" :color=\"['#50e3c2', '#67a1e5']\" />\n            </div>\n            <dv-decoration-8 class=\"dv-dec-8\" :reverse=\"true\" :color=\"decorationColor\" />\n          </div>\n          <dv-decoration-10 class=\"dv-dec-10-s\" />\n        </div>\n\n        <!-- 第二行 -->\n        <div class=\"d-flex jc-between px-2\">\n          <div class=\"d-flex aside-width\">\n            <div class=\"react-left ml-4 react-l-s\">\n              <span class=\"react-left\"></span>\n              <span class=\"text\">地区：\n                <el-cascader size=\"large\" :options=\"pcaTextArr\" v-model=\"selectedOptions\"\n                  style=\"width: 300px;background-color: #ffffff14 !important;\">\n                </el-cascader>\n                <el-link @click=\"saveData()\" type=\"primary\" style=\"margin-left: 10px;font-size: large;\">保存</el-link>\n\n              </span>\n\n            </div>\n            <div class=\"react-left ml-3\">\n              <span class=\"text\" v-if=\"this.$store.getters.getRegionIp != ''\">\n                {{ this.$store.getters.getRegionIp }}\n              </span>\n              <el-link class=\"text\" v-else @click=\"changeIP()\" type=\"primary\" style=\"font-size: large;\">\n                使用IP地址\n              </el-link>\n\n\n            </div>\n          </div>\n          <div class=\"d-flex aside-width\">\n            <div class=\"react-right bg-color-blue mr-3\">\n              <span class=\"text fw-b\">\n                {{ this.$store.getters.getRegionName }}\n              </span>\n            </div>\n            <div class=\"react-right mr-4 react-l-s\">\n              <span class=\"react-after\"></span>\n              <span class=\"text\" style=\"margin-right: 15px;\">\n                <el-dropdown trigger=\"click\" @command=\"handleCommand\">\n                  <span class=\"el-dropdown-link\">\n                    下拉菜单<i class=\"el-icon-arrow-down el-icon--right\"></i>\n                  </span>\n                  <el-dropdown-menu slot=\"dropdown\">\n                    <el-dropdown-item command=\"a\">黄金糕</el-dropdown-item>\n                    <el-dropdown-item command=\"b\">狮子头</el-dropdown-item>\n                    <el-dropdown-item command=\"c\">螺蛳粉</el-dropdown-item>\n                    <el-dropdown-item command=\"d\" disabled>双皮奶</el-dropdown-item>\n                    <el-dropdown-item command=\"e\" divided>蚵仔煎</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown></span>\n              <span class=\"text\">{{ dateYear }} {{ dateWeek }} {{ dateDay }}</span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"body-box\">\n          <!-- 第三行数据 -->\n          <div class=\"content-box\">\n            <div>\n              <dv-border-box-12>\n                <centerLeft1 />\n              </dv-border-box-12>\n            </div>\n            <div>\n              <dv-border-box-12>\n                <centerLeft2 />\n              </dv-border-box-12>\n            </div>\n            <!-- 中间 -->\n            <div>\n              <center />\n            </div>\n            <!-- 中间 -->\n            <div>\n              <centerRight2 />\n            </div>\n            <div>\n              <dv-border-box-13>\n                <centerRight1 />\n              </dv-border-box-13>\n            </div>\n          </div>\n\n          <!-- 第四行数据 -->\n          <div class=\"bottom-box\">\n            <dv-border-box-13>\n              <bottomLeft />\n            </dv-border-box-13>\n            <dv-border-box-12>\n              <bottomRight />\n            </dv-border-box-12>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n//import { mapActions } from 'vuex';\nimport { pcaTextArr } from \"element-china-area-data\";//三级联动（省、市、区）\n//import region from \"../components/region.vue\";\nimport drawMixin from \"../utils/drawMixin\";\nimport { formatTime } from '../utils/index.js'\nimport centerLeft1 from './centerLeft1'\nimport centerLeft2 from './centerLeft2'\nimport centerRight1 from './centerRight1'\nimport centerRight2 from './centerRight2'\nimport center from './center'\nimport bottomLeft from './bottomLeft'\nimport bottomRight from './bottomRight'\n\nexport default {\n  mixins: [drawMixin],\n  data() {\n    return {\n      timing: null,\n      loading: true,\n      dateDay: null,\n      dateYear: null,\n      dateWeek: null,\n      weekday: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n      decorationColor: ['#568aea', '#000000'],\n      pcaTextArr,\n      selectedOptions: [],//三级联动（省、市、区）\n      dialogRegionVisible: false,\n      region: {\n        name: null,\n        id: null,\n        ip: this.$store.getters.getRegionIp,\n        lat: null,\n        lon: null,\n        JWD: null\n      },\n    }\n  },\n  components: {\n    centerLeft1,\n    centerLeft2,\n    centerRight1,\n    centerRight2,\n    center,\n    bottomLeft,\n    bottomRight\n  },\n  mounted() {\n    this.timeFn()\n    this.cancelLoading()\n  },\n  beforeDestroy() {\n    clearInterval(this.timing)\n  },\n  methods: {\n    handleCommand(command) {\n        this.$message('click on item ' + command);\n      },\n    timeFn() {\n      this.timing = setInterval(() => {\n        this.dateDay = formatTime(new Date(), 'HH: mm: ss')\n        this.dateYear = formatTime(new Date(), 'yyyy-MM-dd')\n        this.dateWeek = this.weekday[new Date().getDay()]\n      }, 1000)\n    },\n    cancelLoading() {\n      setTimeout(() => {\n        this.loading = false\n      }, 600)\n    },\n    changeIP() {\n      //删除cookie里的region\n      this.$cookie.remove('region');\n      //刷新整个页面\n      window.location.reload();\n    },\n    saveData() {\n      console.log('Selected Options:', this.selectedOptions[2])\n      // 首先判断 selectedOptions 是否为空\n      if (this.selectedOptions.length == 0) {\n        this.$message.warning('请选择选项')\n      } else {\n        // 调用 getGeoInfo 方法\n        this.getGeoInfo(this.selectedOptions);\n      }\n\n    },\n    getGeoInfo(location) {\n      axios.get(`https://geoapi.qweather.com/v2/city/lookup?location=${location}&key=5f017c6d7edb4a7ba9fe4f491a2900ca`)\n        .then(response => {\n          let region = response.data.location\n          console.log(\"index-getGeoInfo\");\n          //console.log(region)\n          // 查找匹配 this.selectedOptions[2] 的元素\n          let selectedRegion = region.find(item => item.name == location[2].replace(/区$|县$|市$/, ''));\n          console.log(selectedRegion)\n          if (selectedRegion) {\n            //获取需要的属性值\n            this.region.name = location[0] + location[1] + location[2];\n            this.region.id = selectedRegion.id\n            this.region.lat = selectedRegion.lat\n            this.region.lon = selectedRegion.lon\n            this.region.JWD = selectedRegion.lon + ',' + selectedRegion.lat\n\n            // 保存到cookie\n            this.$cookie.set(\"region\", JSON.stringify(this.region))\n\n            // 保存到vuex\n            this.$store.commit('setLocationData', this.region)\n            window.location.reload()\n            this.$message.success('保存成功')\n          } else {\n            console.error('Region not found')\n          }\n          //this.storeData()\n        })\n        .catch(error => {\n          console.error('Error fetching geo info:', error)\n        })\n    },\n    storeData() {\n      // 在这里实现保存数据的逻辑\n      console.log('数据已保存')\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-input__inner {\n  background-color: transparent !important;\n  color: aliceblue;\n}\n\n@import '../assets/scss/index.scss';\n\n\n</style>\n"]}]}
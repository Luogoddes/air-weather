{"remainingRequest":"E:\\code\\vue\\screen-vue-datav\\node_modules\\thread-loader\\dist\\cjs.js!E:\\code\\vue\\screen-vue-datav\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\vue\\screen-vue-datav\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\code\\vue\\screen-vue-datav\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\vue\\screen-vue-datav\\src\\components\\echart\\center\\air-quality-forecast\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\code\\vue\\screen-vue-datav\\src\\components\\echart\\center\\air-quality-forecast\\index.vue","mtime":1717930924811},{"path":"E:\\code\\vue\\screen-vue-datav\\babel.config.js","mtime":1710123821000},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1716778783793},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1716778783793},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\babel-loader\\lib\\index.js","mtime":1716778784730},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1716778783793},{"path":"E:\\code\\vue\\screen-vue-datav\\node_modules\\vue-loader\\lib\\index.js","mtime":1716778785207}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovY29kZS92dWUvc2NyZWVuLXZ1ZS1kYXRhdi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBDaGFydCBmcm9tICcuL2NoYXJ0LnZ1ZSc7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoewogICAgcmVnaW9uOiBmdW5jdGlvbiByZWdpb24oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnJlZ2lvbjsKICAgIH0KICB9KSksCiAgd2F0Y2g6IHsKICAgICdyZWdpb24uaWQnOiBmdW5jdGlvbiByZWdpb25JZChuZXdJZCkgewogICAgICBpZiAobmV3SWQpIHsKICAgICAgICAvL2FsZXJ0KCLnqbrmsJTotKjph4815aSpIOebkeWQrOWIsOWcsOWMuuWAvOaUueWPmDoiICsgbmV3SWQpCiAgICAgICAgdGhpcy5nZXRBaXJRdWF0aWx5SW5mbyhuZXdJZCk7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy5yZWdpb24uaWQpIHsKICAgICAgLy9hbGVydCgi56m65rCU6LSo6YePNeWkqSDmnIkiKQogICAgICB0aGlzLmdldEFpclF1YXRpbHlJbmZvKHRoaXMucmVnaW9uLmlkKTsKICAgIH0KICAgIC8vIGVsc2UgewogICAgLy8gICBhbGVydCgi56m65rCU6LSo6YePNeWkqSDmsqHmnIkiKQogICAgLy8gfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNkYXRhOiB7CiAgICAgICAgdGltZTogWyc2LzcnLCAnNi84JywgJzYvOScsICc2LzEwJywgJzExLzExJ10sCiAgICAgICAgY3VycmVudF9kYXRhOiBbNDE5LCAyNzAsIDQ0MCwgMzcwLCA0NTldLAogICAgICAgIHRydWVfZGF0YTogWzgxLCAyMzAsIDYwLCAxMzAsIDQxXSAvL+i/meS4quaVsOaNruaYr+epuuawlOi0qOmHj+eahOecn+WunmFxae+8jOS4iumdoumCo+aYr+aYr+S7lueahOihpe+8jOS5n+WwseaYrzUwMCAtIHRydWVfZGF0YQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgQ2hhcnQ6IENoYXJ0CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRBaXJRdWF0aWx5SW5mbzogZnVuY3Rpb24gZ2V0QWlyUXVhdGlseUluZm8obG9jYXRpb24pIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgYXhpb3MuZ2V0KCJodHRwczovL2RldmFwaS5xd2VhdGhlci5jb20vdjcvYWlyLzVkP2xvY2F0aW9uPSIuY29uY2F0KGxvY2F0aW9uLCAiJmtleT0iKS5jb25jYXQodGhpcy4kYXBpS2V5KSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAvL2NvbnN0IGRhdGEgPSByZXNwb25zZS5kYXRhLm5vdzsKICAgICAgICBjb25zb2xlLmxvZygiPT09PT09PeepuuawlOi0qOmHjzXlpKk9PT09PT0iKTsKICAgICAgICAvL2NvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEuZGFpbHkpOwoKICAgICAgICBfdGhpcy5jZGF0YS50aW1lID0gcmVzcG9uc2UuZGF0YS5kYWlseS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBfdGhpcy5mb3JtYXREYXRlKGl0ZW0uZnhEYXRlKTsKICAgICAgICB9KTsKICAgICAgICBfdGhpcy5jZGF0YS50cnVlX2RhdGEgPSByZXNwb25zZS5kYXRhLmRhaWx5Lm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIHBhcnNlSW50KGl0ZW0uYXFpKTsKICAgICAgICB9KTsKICAgICAgICBfdGhpcy5jZGF0YS5jdXJyZW50X2RhdGEgPSByZXNwb25zZS5kYXRhLmRhaWx5Lm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIDUwMCAtIHBhcnNlSW50KGl0ZW0uYXFpKTsKICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgYWlyLXF1YWxpdHkgaW5mbzonLCBlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIGZvcm1hdERhdGU6IGZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZVN0cmluZykgewogICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKGRhdGVTdHJpbmcpOwogICAgICByZXR1cm4gIiIuY29uY2F0KGRhdGUuZ2V0TW9udGgoKSArIDEsICIvIikuY29uY2F0KGRhdGUuZ2V0RGF0ZSgpKTsKICAgIH0KICB9Cn07"},{"version":3,"names":["axios","Chart","mapState","computed","_objectSpread","region","state","watch","regionId","newId","getAirQuatilyInfo","mounted","id","data","cdata","time","current_data","true_data","components","methods","location","_this","get","concat","$apiKey","then","response","console","log","daily","map","item","formatDate","fxDate","parseInt","aqi","catch","error","dateString","date","Date","getMonth","getDate"],"sources":["src/components/echart/center/air-quality-forecast/index.vue"],"sourcesContent":["<template>\n  <div>\n    <Chart :cdata=\"cdata\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Chart from './chart.vue';\nimport { mapState } from 'vuex';\nexport default {\n  computed: {\n    ...mapState({\n      region: state => state.region,\n    }),\n  },\n  watch: {\n    'region.id': function (newId) {\n      if (newId) {\n        //alert(\"空气质量5天 监听到地区值改变:\" + newId)\n        this.getAirQuatilyInfo(newId);\n      }\n    }\n  },\n  mounted() {\n    if (this.region.id) {\n      //alert(\"空气质量5天 有\")\n      this.getAirQuatilyInfo(this.region.id);\n    }\n    // else {\n    //   alert(\"空气质量5天 没有\")\n    // }\n  },\n  data() {\n    return {\n      cdata: {\n        time: ['6/7', '6/8', '6/9', '6/10', '11/11'],\n        current_data: [419, 270, 440, 370, 459],\n        true_data: [81, 230, 60, 130, 41], //这个数据是空气质量的真实aqi，上面那是是他的补，也就是500 - true_data\n      }\n    }\n  },\n  components: {\n    Chart,\n  },\n  methods: {\n    getAirQuatilyInfo(location) {\n      axios.get(`https://devapi.qweather.com/v7/air/5d?location=${location}&key=${this.$apiKey}`)\n        .then(response => {\n          //const data = response.data.now;\n          console.log(\"=======空气质量5天======\");\n          //console.log(response.data.daily);\n          \n          this.cdata.time = response.data.daily.map(item => this.formatDate(item.fxDate));\n          this.cdata.true_data = response.data.daily.map(item => parseInt(item.aqi));\n          this.cdata.current_data = response.data.daily.map(item => 500 - parseInt(item.aqi));\n        })\n        .catch(error => {\n          console.error('Error fetching air-quality info:', error);\n        });\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return `${date.getMonth() + 1}/${date.getDate()}`;\n    }\n  }\n}\n</script>"],"mappings":";;;AAOA,OAAAA,KAAA;AACA,OAAAC,KAAA;AACA,SAAAC,QAAA;AACA;EACAC,QAAA,EAAAC,aAAA,KACAF,QAAA;IACAG,MAAA,WAAAA,OAAAC,KAAA;MAAA,OAAAA,KAAA,CAAAD,MAAA;IAAA;EACA,GACA;EACAE,KAAA;IACA,sBAAAC,SAAAC,KAAA;MACA,IAAAA,KAAA;QACA;QACA,KAAAC,iBAAA,CAAAD,KAAA;MACA;IACA;EACA;EACAE,OAAA,WAAAA,QAAA;IACA,SAAAN,MAAA,CAAAO,EAAA;MACA;MACA,KAAAF,iBAAA,MAAAL,MAAA,CAAAO,EAAA;IACA;IACA;IACA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;QACAC,IAAA;QACAC,YAAA;QACAC,SAAA;MACA;IACA;EACA;EACAC,UAAA;IACAjB,KAAA,EAAAA;EACA;EACAkB,OAAA;IACAT,iBAAA,WAAAA,kBAAAU,QAAA;MAAA,IAAAC,KAAA;MACArB,KAAA,CAAAsB,GAAA,mDAAAC,MAAA,CAAAH,QAAA,WAAAG,MAAA,MAAAC,OAAA,GACAC,IAAA,WAAAC,QAAA;QACA;QACAC,OAAA,CAAAC,GAAA;QACA;;QAEAP,KAAA,CAAAP,KAAA,CAAAC,IAAA,GAAAW,QAAA,CAAAb,IAAA,CAAAgB,KAAA,CAAAC,GAAA,WAAAC,IAAA;UAAA,OAAAV,KAAA,CAAAW,UAAA,CAAAD,IAAA,CAAAE,MAAA;QAAA;QACAZ,KAAA,CAAAP,KAAA,CAAAG,SAAA,GAAAS,QAAA,CAAAb,IAAA,CAAAgB,KAAA,CAAAC,GAAA,WAAAC,IAAA;UAAA,OAAAG,QAAA,CAAAH,IAAA,CAAAI,GAAA;QAAA;QACAd,KAAA,CAAAP,KAAA,CAAAE,YAAA,GAAAU,QAAA,CAAAb,IAAA,CAAAgB,KAAA,CAAAC,GAAA,WAAAC,IAAA;UAAA,aAAAG,QAAA,CAAAH,IAAA,CAAAI,GAAA;QAAA;MACA,GACAC,KAAA,WAAAC,KAAA;QACAV,OAAA,CAAAU,KAAA,qCAAAA,KAAA;MACA;IACA;IACAL,UAAA,WAAAA,WAAAM,UAAA;MACA,IAAAC,IAAA,OAAAC,IAAA,CAAAF,UAAA;MACA,UAAAf,MAAA,CAAAgB,IAAA,CAAAE,QAAA,aAAAlB,MAAA,CAAAgB,IAAA,CAAAG,OAAA;IACA;EACA;AACA","ignoreList":[]}]}